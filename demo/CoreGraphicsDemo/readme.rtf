{\rtf1\ansi\ansicpg936\cocoartf1504\cocoasubrtf600
{\fonttbl\f0\fnil\fcharset134 PingFangSC-Regular;\f1\fnil\fcharset0 HelveticaNeue;\f2\fnil\fcharset0 Menlo-Regular;
}
{\colortbl;\red255\green255\blue255;\red35\green35\blue35;\red83\green104\blue112;\red252\green244\blue220;
\red255\green255\blue255;}
{\*\expandedcolortbl;\csgray\c100000;\cssrgb\c18431\c18431\c18431;\cssrgb\c39608\c48235\c51373;\cssrgb\c99216\c96471\c89020;
\csgray\c100000;}
\paperw12240\paperh15840\margl1440\margr1440\vieww9000\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs32 \cf2 \expnd0\expndtw0\kerning0
\'d4\'da
\f1 iOS
\f0 \'d6\'d0\'ca\'b5\'cf\'d6\'d7\'d4\'b6\'a8\'d2\'e5\'bb\'e6\'cd\'bc\'a3\'ac\'d0\'e8\'d2\'aa\'bb\'f1\'b5\'c3\'d2\'bb\'b8\'f6
\f2\fs24 \cf3 \cb4 graphics context
\f0\fs32 \cf2 \cb5 \'b6\'d4\'cf\'f3\'a3\'ac\'cb\'fc\'be\'cd\'ca\'c7\'c4\'e3\'bb\'ad\'cd\'bc\'b5\'c4\'b5\'d8\'b7\'bd\'a3\'a8\'bf\'c9\'d2\'d4\'c0\'ed\'bd\'e2\'ce\'aa\'d2\'bb\'d5\'c5\'bb\'ad\'b0\'e5\'a3\'a9\'a1\'a3\
\'d7\'dc\'b5\'c4\'c0\'b4\'cb\'b5\'c4\'e3\'d3\'d0\'c1\'bd\'d6\'d6\'b7\'bd\'b7\'a8\'c0\'b4\'bb\'f1\'b5\'c3\'cb\'fc
\f1 :\

\f0 \'cd\'a8\'b9\'fd
\f1 UIGraphicsBeginImageContextWithOptions
\f0 \'b7\'bd\'b7\'a8\'be\'cd\'bf\'c9\'d2\'d4\'bb\'f1\'b5\'c3\'d2\'bb\'b8\'f6\'cd\'bc\'d0\'ce\'c9\'cf\'cf\'c2\'ce\'c4\'a3\'ac\'c8\'bb\'ba\'f3\'c4\'e3\'be\'cd\'bf\'c9\'d2\'d4\'d4\'da\'c6\'e4\'c9\'cf\'bd\'f8\'d0\'d0\'bb\'e6\'cd\'bc\'b2\'d9\'d7\'f7\'a3\'ac\'b5\'b1\'bb\'e6\'cd\'bc\'b2\'d9\'d7\'f7\'cd\'ea\'b3\'c9\'d2\'d4\'ba\'f3\'a3\'ac\'bf\'c9\'d2\'d4\'cd\'a8\'b9\'fd
\f1 UIGraphicsGetImageFromCurrentImageContext
\f0 \'b5\'c3\'b5\'bd\'d2\'bb\'b8\'f6\'b4\'fa\'b1\'ed\'bb\'e6\'d6\'c6\'c4\'da\'c8\'dd\'b5\'c4
\f1 UIImage
\f0 \'b6\'d4\'cf\'f3\'a3\'ac\'d7\'ee\'ba\'f3\'b5\'f7\'d3\'c3
\f1 UIGraphicsEndImageContext
\f0 \'b9\'d8\'b1\'d5\'b4\'cb\'cd\'bc\'d0\'ce\'c9\'cf\'cf\'c2\'ce\'c4\'a1\'a3
\f1 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\fs28 \cf0 \cb1 \kerning1\expnd0\expndtw0 Cocoa
\f0 \'cc\'e1\'b9\'a9
\f1 \
	\'95	
\f0 \'d7\'d4\'b6\'a8\'d2\'e5
\f1 UIView
\f0 \'a3\'ac\'d6\'d8\'d0\'b4
\f1  drawRect: 
\f0 \'b7\'bd\'b7\'a8\'a3\'ac\'b4\'cb\'b7\'bd\'b7\'a8\'d6\'d0\'d2\'d1\'d3\'c9
\f1 Cocoa
\f0 \'c9\'e8\'d6\'c3\'ba\'c3\'c1\'cb
\f1 Context\
	\'95	
\f0 \'d7\'d4\'b6\'a8\'d2\'e5
\f1 UIView
\f0 \'a3\'ac\'d6\'d8\'d0\'b4
\f1  drawLayer:inContext: 
\f0 \'b5\'da\'b6\'fe\'b8\'f6\'b2\'ce\'ca\'fd\'be\'cd\'ca\'c7\'d2\'bb\'b8\'f6
\f1 Context\
b. Core Graphics</h4>\
<p>
\f0 \'d5\'e2\'d6\'d6\'b7\'bd\'ca\'bd\'ca\'b9\'d3\'c3\'c6\'f0\'c0\'b4\'d2\'aa\'b1\'c8
\f1 <code>UIKit</code>
\f0 \'b7\'bd\'ca\'bd\'b8\'b4\'d4\'d3\'d2\'bb\'d0\'a9
\f1 ,
\f0 \'cb\'fc\'ca\'c7\'c3\'e6\'cf\'f2\'b9\'fd\'b3\'cc\'b5\'c4
\f1 ,
\f0 \'cb\'fc\'b5\'c4\'c3\'bf\'d2\'bb\'b8\'f6\'bb\'e6\'cd\'bc\'ba\'af\'ca\'fd\'b6\'bc\'d0\'e8\'d2\'aa\'b4\'ab\'c8\'eb\'d2\'bb\'b8\'f6
\f1 context
\f0 \'b6\'d4\'cf\'f3
\f1 ,
\f0 \'c8\'e7\'b9\'fb\'c4\'e3\'b5\'b1\'c7\'b0\'ce\'bb\'d3\'da
\f1 UIGraphicsBeginImageContextWithOptions
\f0 \'ba\'af\'ca\'fd\'bb\'f2
\f1 drawRect
\f0 \'a3\'ba\'b7\'bd\'b7\'a8\'d6\'d0\'a3\'ac\'b2\'a2\'c3\'bb\'d3\'d0\'d2\'fd\'d3\'c3\'d2\'bb\'b8\'f6\'c9\'cf\'cf\'c2\'ce\'c4\'a1\'a3\'ce\'aa\'c1\'cb\'ca\'b9\'d3\'c3
\f1 <code>Core Graphics</code>
\f0 \'a3\'ac\'c4\'e3\'bf\'c9\'d2\'d4\'b5\'f7\'d3\'c3
\f1 UIGraphicsGetCurrentContext
\f0 \'ba\'af\'ca\'fd\'bb\'f1\'b5\'c3\'b5\'b1\'c7\'b0\'b5\'c4\'cd\'bc\'d0\'ce\'c9\'cf\'cf\'c2\'ce\'c4\'a1\'a3
\f1 <br>
\f0 \'ca\'b9\'d3\'c3\'d5\'e2\'d6\'d6\'b7\'bd\'ca\'bd\'bb\'e6\'cd\'bc\'c4\'e3\'b5\'c4\'b4\'fa\'c2\'eb\'bf\'b4\'c9\'cf\'c8\'a5
\f1 ,
\f0 \'b4\'f3\'b8\'c5\'ca\'c7\'d5\'e2\'d1\'f9
\f1 :  </p>\
<pre><code class="swift">let ctx = UIGraphicsGetCurrentContext()!\
CGContextAddEllipseInRect(ctx, CGRectMake(0, 0, 100, 100))\
CGContextSetFillColorWithColor(ctx, UIColor.blueColor().CGColor)\
CGContextFillPath(ctx)\
// ...</code></pre>\
<h4>
\f0 \'c1\'bd\'d6\'d6\'b7\'bd\'ca\'bd\'b5\'c4\'b6\'d4\'b1\'c8
\f1 </h4>\
UIKit
\f0 \'d2\'b2\'ca\'c7\'bb\'f9\'d3\'da
\f1 Core Graphics
\f0 \'b5\'c4
\f1 ,
\f0 \'ca\'c7\'b6\'d4
\f1 Core Graphics
\f0 \'b5\'c4\'d2\'bb\'d6\'d6\'b7\'e2\'d7\'b0
\f1 ,
\f0 \'ca\'b9\'d3\'c3\'c6\'f0\'c0\'b4\'b8\'fc\'bc\'f2\'b1\'e3
\f1 , 
\f0 \'b5\'c4\'b9\'a6\'c4\'dc\'b8\'fc\'c7\'bf\'b4\'f3\'b5\'ab\'d2\'b2\'b8\'fc\'b8\'b4\'d4\'d3
\f1 .</li>\
UIKit
\f0 \'d6\'bb\'c4\'dc\'bb\'f9\'d3\'da\'b5\'b1\'c7\'b0
\f1 Context
\f0 \'bb\'e6\'d6\'c6
\f1 ,
\f0 \'bf\'c9\'d2\'d4\'cd\'a8\'b9\'fd
\f1 UIGraphicsGetCurrentContext
\f0 \'ba\'af\'ca\'fd\'bb\'f1\'b5\'c3\'b5\'b1\'c7\'b0\'b5\'c4\'cd\'bc\'d0\'ce\'c9\'cf\'cf\'c2\'ce\'c4\'a1\'a3
\f1 </li>\
</ol>\
<h3>3. 
\f0 \'c1\'f9\'d6\'d6\'bb\'e6\'cd\'bc\'d0\'ce\'ca\'bd
\f1 </h3>\
<p>
\f0 \'d6\'c1\'b4\'cb\'a3\'ac\'ce\'d2\'c3\'c7\'d3\'d0\'c1\'cb\'c1\'bd\'b4\'f3\'bb\'e6\'cd\'bc\'bf\'f2\'bc\'dc\'b5\'c4\'d6\'a7\'b3\'d6\'d2\'d4\'bc\'b0\'c8\'fd\'d6\'d6\'bb\'f1\'b5\'c3\'cd\'bc\'d0\'ce\'c9\'cf\'cf\'c2\'ce\'c4\'b5\'c4\'b7\'bd\'b7\'a8
\f1 <code>(drawRect:
\f0 \'a1\'a2
\f1 drawRect: inContext:
\f0 \'a1\'a2
\f1 UIGraphicsBeginImageContextWithOptions)</code>
\f0 \'a1\'a3\'c4\'c7\'c3\'b4\'ce\'d2\'c3\'c7\'be\'cd\'d3\'d0
\f1 6
\f0 \'d6\'d6\'bb\'e6\'cd\'bc\'b5\'c4\'d0\'ce\'ca\'bd
\f1 : </p>\
<p>1 . 
\f0 \'d4\'da
\f1 UIView
\f0 \'b5\'c4\'d7\'d3\'c0\'e0\'b7\'bd\'b7\'a8
\f1 drawRect
\f0 \'a3\'ba\'d6\'d0\'bb\'e6\'d6\'c6\'d2\'bb\'b8\'f6\'c0\'b6\'c9\'ab\'d4\'b2
\f1 , 
\f0 \'ca\'b9\'d3\'c3
\f1  <code>UIKit</code>
\f0 \'b7\'bd\'ca\'bd
\f1 :  </p>\
<pre><code class="swift">override func drawRect(rect: CGRect) \{\
        let p = UIBezierPath(ovalInRect: CGRectMake(0, 0, 100, 100))\
        UIColor.blueColor().setFill()\
        p.fill()\
\}</code></pre>\
<p>2 . 
\f0 \'d4\'da
\f1 UIView
\f0 \'b5\'c4\'d7\'d3\'c0\'e0\'b7\'bd\'b7\'a8
\f1 drawRect
\f0 \'a3\'ba\'d6\'d0\'bb\'e6\'d6\'c6\'d2\'bb\'b8\'f6\'c0\'b6\'c9\'ab\'d4\'b2
\f1 , 
\f0 \'ca\'b9\'d3\'c3
\f1  <code>Core Graphics</code>
\f0 \'b7\'bd\'ca\'bd
\f1 :  </p>\
<pre><code class="swift">override func drawRect(rect: CGRect) \{\
    let con = UIGraphicsGetCurrentContext()!\
    CGContextAddEllipseInRect(con, CGRectMake(0, 0, 100, 100))\
    CGContextSetFillColorWithColor(con, UIColor.blueColor().CGColor)\
    CGContextFillPath(con)\
\}</code></pre>\
<p>3 . 
\f0 \'d4\'da
\f1 UIView
\f0 \'d7\'d3\'c0\'e0\'b5\'c4
\f1 drawLayer:inContext
\f0 \'a3\'ba\'b7\'bd\'b7\'a8\'d6\'d0
\f1 ,
\f0 \'ca\'b9\'d3\'c3
\f1 <code>UIKit</code>
\f0 \'b7\'bd\'ca\'bd
\f1 :  </p>\
\
<h4>
\f0 \'c1\'bd\'d6\'d6\'b7\'bd\'ca\'bd\'b5\'c4\'b6\'d4\'b1\'c8
\f1 </h4>\
<ol>\
<li>
\f0 \'cd\'a8\'b9\'fd
\f1  <em>UIGraphicsBeginImageContextWithOptions</em> 
\f0 \'b4\'b4\'bd\'a8\'b5\'c4
\f1 context
\f0 \'bb\'e1\'b1\'bb\'d7\'d4\'b6\'af\'c9\'e8\'d6\'c3\'ce\'aa\'b5\'b1\'c7\'b0\'bb\'b7\'be\'b3\'b5\'c4
\f1 context
\f0 \'a3\'ac\'cb\'f9\'d2\'d4\'d5\'e2\'d6\'d6\'b7\'bd\'ca\'bd\'cf\'c2\'d6\'b4\'d0\'d0\'bb\'e6\'cd\'bc\'ca\'b1\'bf\'c9\'d2\'d4\'d6\'b1\'bd\'d3\'ca\'b9\'d3\'c3
\f1 UIKit
\f0 \'b5\'c4\'bb\'e6\'cd\'bc\'b7\'bd\'b7\'a8\'a3\'ac\'b2\'bb\'d0\'e8\'d2\'aa\'bd\'f8\'d0\'d0\'b6\'ee\'cd\'e2\'b5\'c4\'b2\'d9\'d7\'f7\'a3\'a8
\f1 UIKit
\f0 \'d6\'bb\'c4\'dc\'bb\'f9\'d3\'da\'b5\'b1\'c7\'b0
\f1 Context
\f0 \'bb\'e6\'d6\'c6\'a3\'a9
\f1 </li>\
<li>\
<em>drawRect</em> 
\f0 \'b7\'bd\'b7\'a8\'d6\'d0\'d2\'d1\'d7\'d4\'b6\'af\'c9\'e8\'d6\'c3\'ba\'c3\'c1\'cb
\f1 context
\f0 \'bf\'c9\'d2\'d4\'d6\'b1\'bd\'d3\'bd\'f8\'d0\'d0
\f1 UIKit
\f0 \'b7\'bd\'ca\'bd\'b5\'c4\'bb\'e6\'cd\'bc
\f1 </li>\
<li>\
<em>drawLayer</em> 
\f0 \'b7\'bd\'b7\'a8\'d6\'d0\'b5\'c4
\f1 context,
\f0 \'b2\'a2\'c3\'bb\'d3\'d0\'b1\'bb\'d7\'d4\'b6\'af\'c9\'e8\'d6\'c3\'ce\'aa\'b5\'b1\'c7\'b0\'bb\'b7\'be\'b3\'b5\'c4
\f1 context,
\f0 \'cb\'f9\'d2\'d4\'b2\'bb\'c4\'dc\'d6\'b1\'bd\'d3\'bd\'f8\'d0\'d0
\f1 UIKit
\f0 \'b7\'bd\'ca\'bd\'b5\'c4\'bb\'e6\'d6\'c6
\f1 </li>\
</ol>\
<h3>2. 
\f0 \'c1\'bd\'d6\'d6\'bb\'e6\'cd\'bc\'bf\'f2\'bc\'dc
\f1 </h3>\
<p>iOS
\f0 \'d6\'a7\'b3\'d6\'c1\'bd\'cc\'d7\'bb\'e6\'cd\'bc
\f1 API: <code>Core Graphics/QuartZ 2D</code>
\f0 \'bc\'b0
\f1 <code>OpenGL ES</code>. 
\f0 \'c7\'b0\'d5\'df\'d3\'d6\'bf\'c9\'d2\'d4\'b1\'bb\'cf\'b8\'b7\'d6\'ce\'aa\'c1\'bd\'d6\'d6
\f1 : <code>UIKit
\f0 \'b7\'bd\'ca\'bd
\f1 </code>
\f0 \'bc\'b0
\f1 <code>Core Graphics
\f0 \'b7\'bd\'ca\'bd
\f1 </code>,
\f0 \'c6\'e4\'ca\'b5\'cb\'f9\'ce\'bd
\f1 <code>UIKit
\f0 \'b7\'bd\'ca\'bd
\f1 </code>
\f0 \'d2\'b2\'ca\'c7\'bb\'f9\'d3\'da
\f1 <code>Core Graphics</code>
\f0 \'b5\'c4
\f1 ,
\f0 \'cb\'fc\'d6\'bb\'ca\'c7\'b6\'d4
\f1 <code>Core Graphics</code>
\f0 \'b5\'c4\'d2\'bb\'b8\'f6\'c3\'e6\'cf\'f2\'b6\'d4\'cf\'f3\'b5\'c4\'b7\'e2\'d7\'b0
\f1 (Core Graphics
\f0 \'ca\'c7\'d2\'bb\'cc\'d7\'bb\'f9\'d3\'da
\f1 C
\f0 \'b5\'c4\'c3\'e6\'cf\'f2\'b9\'fd\'b3\'cc\'b5\'c4\'bb\'e6\'cd\'bc
\f1 API).<br>
\f0 \'b6\'f8
\f1 <code>OpenGL ES</code>
\f0 \'ca\'c7\'d2\'bb\'cc\'d7\'bf\'e7\'c6\'bd\'cc\'a8\'b5\'c4\'cd\'bc\'d0\'ce
\f1 API
\f0 \'bd\'d3\'bf\'da
\f1 ,
\f0 \'cb\'fc\'d6\'bb\'ca\'c7\'b6\'a8\'d2\'e5\'c1\'cb\'d2\'bb\'cc\'d7
\f1 API
\f0 \'bd\'d3\'bf\'da
\f1 ,
\f0 \'ca\'b5\'cf\'d6\'d3\'c9\'b8\'f7\'b8\'f6\'b3\'a7\'c9\'cc\'d7\'d4\'bc\'ba\'d7\'f6
\f1 ,
\f0 \'d7\'f6
\f1 iOS
\f0 \'b5\'c4\'d3\'a6\'d3\'c3\'bf\'aa\'b7\'a2\'d2\'bb\'b0\'e3\'ca\'b9\'d3\'c3\'b2\'bb\'b5\'bd\'d5\'e2\'d6\'d6\'b7\'bd\'ca\'bd
\f1 ,
\f0 \'cb\'f9\'d2\'d4\'d5\'e2\'d6\'d6\'b7\'bd\'ca\'bd\'b5\'c4\'bb\'e6\'cd\'bc\'b2\'bb\'d4\'da\'bd\'f1\'cc\'ec\'b5\'c4\'cc\'d6\'c2\'db\'b7\'b6\'ce\'a7
\f1 .
\f0 \'cf\'c2\'c3\'e6\'cf\'ea\'cf\'b8\'cc\'d6\'c2\'db\'d2\'bb\'cf\'c2
\f1 <code>UIKit</code>
\f0 \'bc\'b0
\f1 <code>Core Graphics</code>
\f0 \'b7\'bd\'ca\'bd
\f1 .</p>\
<h4>a. UIKit</h4>\
<p>
\f0 \'d5\'e2\'d6\'d6\'b7\'bd\'ca\'bd\'be\'cd\'ca\'c7\'b6\'d4
\f1 <code>Core Graphics</code>
\f0 \'b7\'bd\'ca\'bd\'b5\'c4\'d2\'bb\'d6\'d6\'bc\'f2\'bb\'af\'b7\'e2\'d7\'b0
\f1 ,
\f0 \'c4\'e3\'bf\'c9\'d2\'d4\'d3\'c3\'c3\'e6\'cf\'f2\'b6\'d4\'cf\'f3\'b5\'c4\'b7\'bd\'ca\'bd\'ba\'dc\'b7\'bd\'b1\'e3\'b5\'c4\'d7\'f6\'b8\'f7\'d6\'d6\'bb\'e6\'cd\'bc\'b2\'d9\'d7\'f7
\f1 ,
\f0 \'d6\'f7\'d2\'aa\'ca\'c7\'cd\'a8\'b9\'fd
\f1 <code>UIBezierPath</code>
\f0 \'d5\'e2\'b8\'f6\'c0\'e0\'c0\'b4\'ca\'b5\'cf\'d6\'b5\'c4
\f1 , <code>UIBezierPath</code>
\f0 \'bf\'c9\'d2\'d4\'b4\'b4\'bd\'a8\'bb\'f9\'d3\'da\'ca\'b8\'c1\'bf\'b5\'c4\'c2\'b7\'be\'b6
\f1 ,
\f0 \'c0\'fd\'c8\'e7\'b8\'f7\'d6\'d6\'d6\'b1\'cf\'df
\f1 ,
\f0 \'c7\'fa\'cf\'df
\f1 ,
\f0 \'d4\'b2\'b5\'c8\'b5\'c8
\f1 <br>
\f0 \'ca\'b9\'d3\'c3\'d5\'e2\'d6\'d6\'b7\'bd\'ca\'bd\'bb\'e6\'cd\'bc\'c4\'e3\'b5\'c4\'b4\'fa\'c2\'eb\'bf\'b4\'c9\'cf\'c8\'a5
\f1 ,
\f0 \'b4\'f3\'b8\'c5\'ca\'c7\'d5\'e2\'d1\'f9
\f1 : </p>\
<pre><code class="swift">let p = UIBezierPath(ovalInRect: CGRectMake(0,0, 100, 100))\
UIColor.blueColor().setFill()\
p.fill()\
// ...</code></pre>\
<h4>b. Core Graphics</h4>\
<p>
\f0 \'d5\'e2\'d6\'d6\'b7\'bd\'ca\'bd\'ca\'b9\'d3\'c3\'c6\'f0\'c0\'b4\'d2\'aa\'b1\'c8
\f1 <code>UIKit</code>
\f0 \'b7\'bd\'ca\'bd\'b8\'b4\'d4\'d3\'d2\'bb\'d0\'a9
\f1 ,
\f0 \'cb\'fc\'ca\'c7\'c3\'e6\'cf\'f2\'b9\'fd\'b3\'cc\'b5\'c4
\f1 ,
\f0 \'cb\'fc\'b5\'c4\'c3\'bf\'d2\'bb\'b8\'f6\'bb\'e6\'cd\'bc\'ba\'af\'ca\'fd\'b6\'bc\'d0\'e8\'d2\'aa\'b4\'ab\'c8\'eb\'d2\'bb\'b8\'f6
\f1 context
\f0 \'b6\'d4\'cf\'f3
\f1 ,
\f0 \'c8\'e7\'b9\'fb\'c4\'e3\'b5\'b1\'c7\'b0\'ce\'bb\'d3\'da
\f1 UIGraphicsBeginImageContextWithOptions
\f0 \'ba\'af\'ca\'fd\'bb\'f2
\f1 drawRect
\f0 \'a3\'ba\'b7\'bd\'b7\'a8\'d6\'d0\'a3\'ac\'b2\'a2\'c3\'bb\'d3\'d0\'d2\'fd\'d3\'c3\'d2\'bb\'b8\'f6\'c9\'cf\'cf\'c2\'ce\'c4\'a1\'a3\'ce\'aa\'c1\'cb\'ca\'b9\'d3\'c3
\f1 <code>Core Graphics</code>
\f0 \'a3\'ac\'c4\'e3\'bf\'c9\'d2\'d4\'b5\'f7\'d3\'c3
\f1 UIGraphicsGetCurrentContext
\f0 \'ba\'af\'ca\'fd\'bb\'f1\'b5\'c3\'b5\'b1\'c7\'b0\'b5\'c4\'cd\'bc\'d0\'ce\'c9\'cf\'cf\'c2\'ce\'c4\'a1\'a3
\f1 <br>
\f0 \'ca\'b9\'d3\'c3\'d5\'e2\'d6\'d6\'b7\'bd\'ca\'bd\'bb\'e6\'cd\'bc\'c4\'e3\'b5\'c4\'b4\'fa\'c2\'eb\'bf\'b4\'c9\'cf\'c8\'a5
\f1 ,
\f0 \'b4\'f3\'b8\'c5\'ca\'c7\'d5\'e2\'d1\'f9
\f1 :  </p>\
<pre><code class="swift">let ctx = UIGraphicsGetCurrentContext()!\
CGContextAddEllipseInRect(ctx, CGRectMake(0, 0, 100, 100))\
CGContextSetFillColorWithColor(ctx, UIColor.blueColor().CGColor)\
CGContextFillPath(ctx)\
// ...</code></pre>\
<h4>
\f0 \'c1\'bd\'d6\'d6\'b7\'bd\'ca\'bd\'b5\'c4\'b6\'d4\'b1\'c8
\f1 </h4>\
<ol>\
<li>\
<code>UIKit</code>
\f0 \'d2\'b2\'ca\'c7\'bb\'f9\'d3\'da
\f1 <code>Core Graphics</code>
\f0 \'b5\'c4
\f1 ,
\f0 \'ca\'c7\'b6\'d4
\f1 <code>Core Graphics</code>
\f0 \'b5\'c4\'d2\'bb\'d6\'d6\'b7\'e2\'d7\'b0
\f1 ,
\f0 \'ca\'b9\'d3\'c3\'c6\'f0\'c0\'b4\'b8\'fc\'bc\'f2\'b1\'e3
\f1 , <code>Core Graphics</code>
\f0 \'b5\'c4\'b9\'a6\'c4\'dc\'b8\'fc\'c7\'bf\'b4\'f3\'b5\'ab\'d2\'b2\'b8\'fc\'b8\'b4\'d4\'d3
\f1 .</li>\
<li>\
<code>UIKit</code>
\f0 \'d6\'bb\'c4\'dc\'bb\'f9\'d3\'da\'b5\'b1\'c7\'b0
\f1 Context
\f0 \'bb\'e6\'d6\'c6
\f1 ,
\f0 \'bf\'c9\'d2\'d4\'cd\'a8\'b9\'fd
\f1 <code>UIGraphicsGetCurrentContext</code>
\f0 \'ba\'af\'ca\'fd\'bb\'f1\'b5\'c3\'b5\'b1\'c7\'b0\'b5\'c4\'cd\'bc\'d0\'ce\'c9\'cf\'cf\'c2\'ce\'c4\'a1\'a3
\f1 </li>\
</ol>\
<h3>3. 
\f0 \'c1\'f9\'d6\'d6\'bb\'e6\'cd\'bc\'d0\'ce\'ca\'bd
\f1 </h3>\
<p>
\f0 \'d6\'c1\'b4\'cb\'a3\'ac\'ce\'d2\'c3\'c7\'d3\'d0\'c1\'cb\'c1\'bd\'b4\'f3\'bb\'e6\'cd\'bc\'bf\'f2\'bc\'dc\'b5\'c4\'d6\'a7\'b3\'d6\'d2\'d4\'bc\'b0\'c8\'fd\'d6\'d6\'bb\'f1\'b5\'c3\'cd\'bc\'d0\'ce\'c9\'cf\'cf\'c2\'ce\'c4\'b5\'c4\'b7\'bd\'b7\'a8
\f1 <code>(drawRect:
\f0 \'a1\'a2
\f1 drawRect: inContext:
\f0 \'a1\'a2
\f1 UIGraphicsBeginImageContextWithOptions)</code>
\f0 \'a1\'a3\'c4\'c7\'c3\'b4\'ce\'d2\'c3\'c7\'be\'cd\'d3\'d0
\f1 6
\f0 \'d6\'d6\'bb\'e6\'cd\'bc\'b5\'c4\'d0\'ce\'ca\'bd
\f1 : </p>\
<p>1 . 
\f0 \'d4\'da
\f1 UIView
\f0 \'b5\'c4\'d7\'d3\'c0\'e0\'b7\'bd\'b7\'a8
\f1 drawRect
\f0 \'a3\'ba\'d6\'d0\'bb\'e6\'d6\'c6\'d2\'bb\'b8\'f6\'c0\'b6\'c9\'ab\'d4\'b2
\f1 , 
\f0 \'ca\'b9\'d3\'c3
\f1  <code>UIKit</code>
\f0 \'b7\'bd\'ca\'bd
\f1 :  </p>\
<pre><code class="swift">override func drawRect(rect: CGRect) \{\
        let p = UIBezierPath(ovalInRect: CGRectMake(0, 0, 100, 100))\
        UIColor.blueColor().setFill()\
        p.fill()\
\}</code></pre>\
<p>2 . 
\f0 \'d4\'da
\f1 UIView
\f0 \'b5\'c4\'d7\'d3\'c0\'e0\'b7\'bd\'b7\'a8
\f1 drawRect
\f0 \'a3\'ba\'d6\'d0\'bb\'e6\'d6\'c6\'d2\'bb\'b8\'f6\'c0\'b6\'c9\'ab\'d4\'b2
\f1 , 
\f0 \'ca\'b9\'d3\'c3
\f1  <code>Core Graphics</code>
\f0 \'b7\'bd\'ca\'bd
\f1 :  </p>\
<pre><code class="swift">override func drawRect(rect: CGRect) \{\
    let con = UIGraphicsGetCurrentContext()!\
    CGContextAddEllipseInRect(con, CGRectMake(0, 0, 100, 100))\
    CGContextSetFillColorWithColor(con, UIColor.blueColor().CGColor)\
    CGContextFillPath(con)\
\}</code></pre>\
<p>3 . 
\f0 \'d4\'da
\f1 UIView
\f0 \'d7\'d3\'c0\'e0\'b5\'c4
\f1 drawLayer:inContext
\f0 \'a3\'ba\'b7\'bd\'b7\'a8\'d6\'d0
\f1 ,
\f0 \'ca\'b9\'d3\'c3
\f1 <code>UIKit</code>
\f0 \'b7\'bd\'ca\'bd
\f1 :  </p>\
<pre><code class="swift">override func drawLayer(layer: CALayer, inContext ctx: CGContext) \{\
    UIGraphicsPushContext(ctx) //
\f0 \'bd\'ab
\f1 ctx
\f0 \'c9\'e8\'d6\'c3\'ce\'aa\'b5\'b1\'c7\'b0
\f1 context\
    let p = UIBezierPath(ovalInRect: CGRectMake(0, 0, 100, 100))\
    UIColor.blueColor().setFill()\
    p.fill()\
    UIGraphicsPushContext(ctx)\
\}</code></pre>\
<p>4 . 
\f0 \'d4\'da
\f1 UIView
\f0 \'d7\'d3\'c0\'e0\'b5\'c4
\f1 drawLayer:inContext
\f0 \'a3\'ba\'b7\'bd\'b7\'a8\'d6\'d0
\f1 ,
\f0 \'ca\'b9\'d3\'c3
\f1 <code>Core Graphics</code>
\f0 \'b7\'bd\'ca\'bd
\f1 :  </p>\
<pre><code class="swift">override func drawLayer(layer: CALayer, inContext ctx: CGContext) \{\
    CGContextAddEllipseInRect(ctx, CGRectMake(0, 0, 100, 100))\
    CGContextSetFillColorWithColor(ctx, UIColor.blueColor().CGColor)\
    CGContextFillPath(ctx)\
\}</code></pre>\
<p>5 . 
\f0 \'ca\'b9\'d3\'c3
\f1 <code>UIGraphicsBeginImageContextWithOptions</code>
\f0 \'b4\'b4\'bd\'a8\'bb\'ad\'b0\'e5
\f1 &amp;
\f0 \'d3\'c3
\f1 <code>UIKit</code>
\f0 \'b7\'bd\'ca\'bd\'bb\'e6\'d6\'c6
\f1 :  </p>\
<pre><code class="swift">UIGraphicsBeginImageContextWithOptions(CGSizeMake(100, 100), false, 0)\
let p = UIBezierPath(ovalInRect: CGRectMake(0, 0, 100, 100))\
UIColor.blueColor().setFill()\
p.fill()\
let image = UIGraphicsGetImageFromCurrentImageContext()\
UIGraphicsEndImageContext()\
//to do something with the image</code></pre>\
<p>6 . 
\f0 \'ca\'b9\'d3\'c3
\f1 <code>UIGraphicsBeginImageContextWithOptions</code>
\f0 \'b4\'b4\'bd\'a8\'bb\'ad\'b0\'e5
\f1 &amp;
\f0 \'d3\'c3
\f1 <code>Core Graphics</code>
\f0 \'b7\'bd\'ca\'bd\'bb\'e6\'d6\'c6
\f1 : </p>\
<pre><code class="swift">UIGraphicsBeginImageContextWithOptions(CGSizeMake(100, 100), false, 0)\
let con = UIGraphicsGetCurrentContext()\
CGContextAddEllipseInRect(con, CGRectMake(0, 0, 100, 100))\
CGContextSetFillColorWithColor(con, UIColor.redColor().CGColor)\
CGContextFillPath(con)\
let image = UIGraphicsGetImageFromCurrentImageContext()\
UIGraphicsEndImageContext()}